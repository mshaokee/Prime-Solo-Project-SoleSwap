{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/shoeBoxReducer.js","redux/reducers/allShoesReducer.js","redux/reducers/homeReducer.js","redux/reducers/details.js","redux/reducers/accountsReducer.js","redux/reducers/editShoeReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/shoeBoxSaga.js","redux/sagas/createSaga.js","redux/sagas/allShoesSaga.js","redux/sagas/homeSaga.js","redux/sagas/detailsSaga.js","redux/sagas/accountSaga.js","redux/sagas/editShoesSaga.js","redux/sagas/index.js","components/LogOutButton/LogOutButton.js","components/Nav/Nav.js","components/Footer/Footer.js","components/HomePage/HomePage.jsx","components/BuyPage/BuyPage.jsx","components/SellPage/SellPage.jsx","components/TradePage/TradePage.jsx","components/CreatePost/CreatePost.jsx","components/BuyPage/BuySelectShoe.jsx","components/SellPage/SellSelectShoe.jsx","components/HomePage/HomeSelectShoe.jsx","components/AllShoes/AllShoes.jsx","components/TradePage/TradeSelectShoe.jsx","components/AllShoes/AllSelectShoe.jsx","components/UserPage/UserEditShoe.jsx","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/AboutPage/AboutPage.js","components/UserPage/UserPage.js","components/App/App.js","theme.js","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","loginMode","userReducer","payload","shoeBoxReducer","allShoesReducer","homeReducer","details","accountsReducer","console","log","editShoeReducer","post_name","post_cat","post_body","rootReducer","errors","user","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","response","status","takeLatest","registerUser","registrationSaga","fetchUser","userSaga","get","data","shoeBoxSaga","shoeBox","createSaga","createPost","description","image","title","catId","allShoesSaga","allShoes","homeSaga","home","detailsSaga","allDetail","buyDetails","sellDetails","homeDetails","tradeDetail","accountSaga","getAccount","editShoesSaga","getEditShoes","editShoe","deleteShoe","id","shoe","post_id","postName","postCat","date","updatedDate","delete","rootSaga","all","LogOutButton","classes","this","props","Button","className","navLink","onClick","dispatch","Component","connect","withStyles","theme","display","float","fontSize","margin","backgroundColor","color","paddingTop","paddingBottom","Nav","Box","nav","boxShadow","to","Typography","variant","navTitle","navRight","reduxState","width","lineHeight","letterSpacing","paddingLeft","overflow","position","Top","zIndex","minHeight","maxHeight","Footer","footer","marginTop","padding","HomePage","handleClick","history","push","window","scrollTo","page","Grid","container","grid","justify","spacing","map","index","key","item","md","Card","card","CardActionArea","CardContent","CardMedia","media","event","post_image","CardActions","button","height","marginBottom","borderBottom","maxWidth","marginRight","marginLeft","moment","require","BuyPage","createBtn","post_date","format","username","cat_name","SellPage","TradePage","CreatePost","topic","open","handleClose","setState","handleOpen","handleChange","target","value","shoeDesc","imageUrl","Swal","fire","text","confirmButtonText","icon","header","inputs","TextField","onChange","label","desc","multiline","rowsMax","url","FormControl","formControl","InputLabel","Select","onClose","onOpen","MenuItem","size","minWidth","textAlign","BuySelectShoe","match","params","detail","borderTop","SellSelectShoe","HomeSelectShoe","AllShoes","TradeSelectShoe","AllSelectShoe","UserEditShoe","handleTitle","handleDesc","handleSubmit","handleDelete","confirmButtonColor","showCancelButton","cancelButtonText","then","result","backBtn","contTitle","selector","user_id","submitBtn","deleteBtn","theShoe","shoeToEdit","lettingSpacing","textSize","paddingRight","LoginPage","password","login","preventDefault","handleInputChangeFor","propertyName","box","onSubmit","Alert","severity","alert","role","input1","htmlFor","text1","name","divider","flexWrap","RegisterPage","email","location","ComponentToShow","ComponentToProtect","component","otherProps","AboutPage","UserPage","handleEdit","user_date","shoeGrid","account","welcomeGrid","fontStyle","App","app","path","exact","from","render","createMuiTheme","palette","primary","red","secondary","blue","danger","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","run","ReactDOM","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.65b9a2ba.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const shoeBoxReducer = (state = [], action) => {\n    // console.log('-------> in shoeBoxReducer');\n    if (action.type === 'GET_shoebox') {\n        return action.payload;\n    }\n    return state;\n};//end shoeBoxReducer\n\nexport default shoeBoxReducer;","const allShoesReducer = (state = [], action) => {\n    if(action.type === 'get_all'){\n        return action.payload;\n    }\n    return state;\n};//end sellReducer\n\nexport default allShoesReducer;","const homeReducer = (state = [], action) => {\n    if (action.type === 'get_home') {\n        return action.payload;\n    }\n    return state;\n};//end buyReducer\n\nexport default homeReducer;","const details = (state = [], action) => {\n    //all page details\n    if (action.type === 'get_all_detail'){\n        return action.payload;\n    } \n    //sell page details\n    else if (action.type === 'get_sell_detail') {\n        return action.payload;\n    }\n    //trade page details\n    else if (action.type === 'get_trade_detail') {\n        return action.payload;\n    }\n    //buy page details\n    else if (action.type === 'get_buy_detail') {\n        return action.payload;\n    }\n    //home page details\n    else if (action.type === 'get_home_detail') {\n        return action.payload;\n    }\n    return state;\n};//end details\n\nexport default details;","const accountsReducer = (state = [], action) => {\n    console.log('-------> in accountsReducer');\n    if(action.type === 'get_account'){\n        return action.payload;\n    }\n    return state;\n};//end accounts Reducer\n\nexport default accountsReducer;","const editShoeReducer = (state = {}, action)=> {\n    //account shoe details for that single shoe\n    if (action.type === 'get_edit_shoe') {\n        return action.payload[0];\n    }\n    //changing our title for single shoe\n    if (action.type === 'change_title'){\n        return {...state, post_name: action.payload};\n    }\n    //changing our category\n    if (action.type === 'change_category'){\n        return {...state, post_cat: action.payload};\n    }\n    //changing our description\n    if (action.type === 'change_description') {\n        return { ...state, post_body: action.payload };\n    }\n    return state;\n};//end editShoeReducer\n\nexport default editShoeReducer;","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport shoeBoxReducer from './shoeBoxReducer';\nimport allShoesReducer from './allShoesReducer';\nimport homeReducer from './homeReducer';\nimport details from './details';\nimport accountsReducer from './accountsReducer';\nimport editShoeReducer from './editShoeReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  shoeBoxReducer, //gets data for shoe box page\n  allShoesReducer, //all shoes reducer that had all shoes data\n  homeReducer,// limit 6 for home page from all shoes\n  details, //get all details, specifically held for certain shoes\n  accountsReducer, //get account data\n  editShoeReducer, //gets specific data for editing\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n//watcher saga\nfunction* shoeBoxSaga(){\n    yield takeLatest('FETCH_shoeBox', shoeBox)\n};//end watcher saga\n\n//generator function\nfunction* shoeBox(){\n    console.log('------>in Shoe Box');\n    try{\n        const response = yield axios.get('/shoes/shoebox')\n        yield put({\n            type: 'GET_shoebox',\n            payload: response.data\n        })\n    }catch(err){\n        console.log('Error in Shoe Box generator.', err);\n    };//end try\n    \n};//end shoeBox generator\n\nexport default shoeBoxSaga;","import axios from 'axios';\nimport {takeLatest} from 'redux-saga/effects'\n\n//watcher saga\nfunction* createSaga(){\n    yield takeLatest('create_post', createPost)\n};//end watcher saga\n\n//generator function\nfunction* createPost(action){\n    // console.log('------> in create Post Saga', action.payload);\n    //create variables so it looks cleaner when sending down\n    let description = action.payload.description;\n    let image = action.payload.image;\n    let title = action.payload.title;\n    let catId = action.payload.catId;\n    let user = action.payload.user;\n    try{\n        yield axios.post('/shoes/addShoe', { description, image, title, catId, user});\n    }catch(err){\n        console.log('Error in create post saga:', err)\n    }\n};//end create post\n\nexport default createSaga;","import axios from 'axios';\nimport {takeLatest, put} from 'redux-saga/effects';\n\n//watcher\nfunction* allShoesSaga(){\n    yield takeLatest('fetch_all', allShoes)\n};//end watcher\n\n//generator\nfunction* allShoes(){\n    try{\n        //send GET request to /shoes/all and send data to our reducer\n        const response = yield axios.get('/shoes/all')\n        yield put({\n            type: 'get_all',\n            payload: response.data\n        })\n    }catch(err){\n        console.log('Error in all shoes saga:', err)\n    }\n};//end sellShoes\n\nexport default allShoesSaga;","import axios from 'axios';\nimport { takeLatest, put } from 'redux-saga/effects';\n\n//watcher saga\nfunction* homeSaga() {\n    yield takeLatest('fetch_shoes', home)\n};//end watcher saga\n\n//generator function\nfunction* home() {\n    console.log('-----> in home');\n    try {\n        const response = yield axios.get('/shoes');\n        yield put({\n            type: 'get_home',\n            payload: response.data\n        })\n    } catch (err) {\n        console.log('Error in home shoes saga:', err);\n    }\n};//end homeSaga page\n\nexport default homeSaga;","import axios from 'axios';\nimport { takeLatest, put } from 'redux-saga/effects';\n\n//watcher\nfunction* detailsSaga() {\n    //take all the data send from our components and send to their detail sagas\n    yield takeLatest('fetch_all_detail', allDetail);\n    yield takeLatest('fetch_buy_detail', buyDetails);\n    yield takeLatest('fetch_sell_detail', sellDetails);\n    yield takeLatest('fetch_home_detail', homeDetails);\n    yield takeLatest('fetch_trade_detail', tradeDetail);\n};//end watcher\n\n//generator for all Details\nfunction* allDetail(action) {\n    try {\n        const response = yield axios.get(`/details/all/${action.payload}`)\n        yield put({\n            type: 'get_all_detail',\n            payload: response.data\n        })\n    } catch (err) {\n        console.log('Error in all shoes details saga:', err)\n    }\n};//end allDetail\n\n//generator for buy Details\nfunction* buyDetails(action) {\n    console.log('-----> in buyShoes');\n    try {\n        const response = yield axios.get(`/details/buy/${action.payload}`);\n        yield put({\n            type: 'get_buy_detail',\n            payload: response.data\n        })\n    } catch (err) {\n        console.log('Error in buy shoes saga:', err);\n    }\n};//end buyDetails page\n\n//generator for sell Details\nfunction* sellDetails(action) {\n    try {\n        const response = yield axios.get(`/details/sell/${action.payload}`)\n        yield put({\n            type: 'get_sell_detail',\n            payload: response.data\n        })\n    } catch (err) {\n        console.log('Error in sell shoes saga:', err)\n    }\n};//end sellDetails\n\n//generator for home Details\nfunction* homeDetails(action) {\n    console.log('-----> in homeDetails');\n    try {\n        const response = yield axios.get(`/details/home/${action.payload}`);\n        yield put({\n            type: 'get_home_detail',\n            payload: response.data\n        })\n    } catch (err) {\n        console.log('Error in home shoes saga:', err);\n    }\n};//end homeDetails page\n\n//generator for trade Details\nfunction* tradeDetail(action) {\n    //action.payload will be the id which we are sending as params\n    console.log('-----> in tradeDetail Saga.');\n    try {\n        //axios get request and send our shoe id as params.\n        const response = yield axios.get(`/details/trade/${action.payload}`)\n        //sending data to our reducer after back from server.\n        yield put({\n            type: 'get_trade_detail',\n            payload: response.data\n        })\n    } catch (err) {\n        console.log('Error in tradeDetail saga:', err)\n    };//end try\n};//end tradeDetail\n\n\nexport default detailsSaga;","import axios from 'axios';\nimport {takeLatest, put} from 'redux-saga/effects'\n\n//watcher saga\nfunction* accountSaga(){\n    yield takeLatest('fetch_account', getAccount);\n};//end accountSaga\n\n//generator function\nfunction* getAccount(){\n    console.log('------> in getAccount saga')\n    try{\n        //send GET request to /accounts and send data to our reducer\n        const response = yield axios.get(`/accounts`)\n        yield put({\n            type: 'get_account',\n            payload: response.data\n        })\n    }catch(err){\n        console.log('Error in getAccount saga:', err)\n    };//end try\n};//end generator function\n\nexport default accountSaga;","import axios from 'axios';\nimport { takeLatest, put } from 'redux-saga/effects';\n\nfunction* editShoesSaga() {\n    yield takeLatest('fetch_edit_shoe', getEditShoes);\n    yield takeLatest('edit_shoe', editShoe);\n    yield takeLatest('delete', deleteShoe);\n}\n\nfunction* getEditShoes(action) {\n    try {\n        const response = yield axios.get(`/account/edit/${action.payload}`);\n        yield put({\n            type: 'get_edit_shoe',\n            payload: response.data\n        })\n    } catch (err) {\n        console.log('Error in accountDetail:', err)\n    }\n}//end getEditShoes\n\nfunction* editShoe(action) {\n    console.log('------> in editShoe', action.payload);\n    let id = action.payload.shoe.post_id;\n    let postName = action.payload.shoe.post_name;\n    let postCat = action.payload.shoe.post_cat;\n    let description = action.payload.shoe.post_body;\n    // let image = action.payload.post_image;\n    let date = action.payload.updatedDate;\n    try {\n       yield axios.put(`/account/edit/update/${id}`, {postName, postCat, description, date})\n    } catch (err) {\n        console.log('Error in editShoe:', err);\n    }\n};//end editShoe\n\nfunction* deleteShoe(action){\n    //action.payload will be the specific post_id\n    let id = action.payload\n    try{\n        yield axios.delete(`/account/edit/delete/${id}`);\n    }catch(err){\n        console.log('Error deleting in deleteShoe Saga:', err)\n    }\n};//end deleteShoe\n\n\nexport default editShoesSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport shoeBoxSaga from './shoeBoxSaga';\nimport createSaga from './createSaga';\nimport allShoesSaga from './allShoesSaga';\nimport homeSaga from './homeSaga';\nimport detailsSaga from './detailsSaga';\nimport accountSaga from './accountSaga';\nimport editShoesSaga from './editShoesSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    shoeBoxSaga(),\n    createSaga(),\n    allShoesSaga(),\n    homeSaga(),\n    detailsSaga(),\n    accountSaga(),\n    editShoesSaga(),\n  ]);\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => {\n  return ({\n    navLink: {\n      display: 'inline-block',\n      float: 'left',\n      fontSize: '20px',\n      margin: '0px 10px',\n      backgroundColor: 'black',\n      color: 'white',\n      paddingTop: '3%',\n      paddingBottom: '3%',\n      // hover option\n      '&:hover': {\n        backgroundColor: '#28283e',\n      }\n    }\n  })\n};//end styles\n\nclass LogOutButton extends Component {\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Button\n        // This button shows up in multiple locations and is styled differently\n        // because it's styled differently depending on where it is used, the className\n        // is passed to it from it's parents through React props\n        className={classes.navLink}\n        onClick={() => this.props.dispatch({ type: 'LOGOUT' })}\n      >\n        Log Out\n      </Button>\n    )\n  }\n};//end component\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(withStyles(styles)(LogOutButton));\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\n//MUI imports\nimport { Box, Button, Typography } from '@material-ui/core';\n//import withStyles to work with class components to style\nimport { withStyles } from '@material-ui/core/styles';\n\n//styles for material ui\nconst styles = theme => {\n  return ({\n    navTitle: {\n      width: '30%',\n      float: 'left',\n      lineHeight: '50px',\n      letterSpacing: '3px',\n      paddingLeft: '5%',\n      color: 'white',\n      paddingTop: '20px'\n    },\n    nav: {\n      overflow: 'hidden',\n      backgroundColor: 'black',\n      position: 'fixed',\n      Top: '0',\n      zIndex: '12',\n      width: '100%',\n      margin: 'auto 0',\n      minHeight: '80px',\n      maxHeight: '80px',\n    },\n    navLink: {\n      display: 'inline-block',\n      float: 'left',\n      fontSize: '20px',\n      margin: '0px 10px',\n      backgroundColor: 'black',\n      color: 'white',\n      paddingTop: '3%',\n      paddingBottom: '3%',\n      // hover option\n      '&:hover': {\n        backgroundColor: '#28283e',\n    }},\n    navRight: {\n      float: 'right',\n      fontSize: '20px',\n      margin: '0px 10px',\n      backgroundColor: 'black',\n      color: 'white'\n    }\n  });//end return\n};//end styles\n\nclass Nav extends Component {\n\n  render() {\n    // allows us to use withStyles in render\n    const { classes } = this.props;\n    return (\n      <Box className={classes.nav} boxShadow={8}>\n        {/* link our title / icon to the home page on click */}\n        <Link to=\"/home\"><Typography variant=\"h3\" className={classes.navTitle}>SoleSwap</Typography></Link>\n        <nav className={classes.navRight}>\n          {/* Show the link to the info page and the logout button if the user is logged in */}\n          <Link to=\"/home\"><Button className={classes.navLink}>Home</Button></Link>\n          {/* When viewing shoes set it into a drop down menu */}\n          <Link to=\"/allShoes\"><Button className={classes.navLink}>All Shoes</Button></Link>\n          <Link to=\"/buy\"><Button className={classes.navLink}>Buy</Button></Link>\n          <Link to=\"/sell\"><Button className={classes.navLink}>Sell</Button></Link>\n          <Link to=\"/trade\"><Button className={classes.navLink}>Trade</Button></Link>\n          <Link to=\"/account\">\n            {/* Show this link if they are logged in or not,\n             but call this link 'Home' if they are logged in,\n            and call this link 'Login / Register' if they are not */}\n            {this.props.user.id ?\n             <Button className={classes.navLink}>My Shoes</Button>\n             :\n              <Button className={classes.navLink}>Login</Button>}\n          </Link>\n          {/* If the user is logged in, show the Logout option */}\n          {this.props.user.id && (\n            <>\n              <Link to=\"/home\"><LogOutButton className={classes.navLink} /></Link>\n            </>\n          )}\n          {/* Always show this link since the about page is not protected */}\n          {/* <Link className=\"navLink\" to=\"/about\">\n        About\n      </Link> */}\n        </nav>\n      </Box>\n    )\n  }\n};\n\n//connect redux to props can target \"user\" to target user reducer\nconst putPropsOnState = reduxState => ({ reduxState, user: reduxState.user })\n//wrap withStyles to allow MUI styling\nexport default connect(putPropsOnState)(withStyles(styles)(Nav));\n","import React, { Component } from 'react';\n// import { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => {\n  return ({\n    footer: {\n      marginTop: 'calc(100vh - 150px - 450px)',\n      padding: '20px 0px 20px 20px',\n      backgroundColor: 'black',\n      color: 'white',\n      boxShadow: '0px 0px 2px #28283e',\n    }\n  })//end return\n}//end style\n\nclass Footer extends Component {\n\n  render() {\n    //allows us to use withStyles\n    const { classes } = this.props;\n    return (\n      <footer className={classes.footer}>\n        &copy; Shaokee Moua 2020\n      </footer>\n    )\n  }\n};\n\n//connect withStyles and component Footer\nexport default (withStyles(styles)(Footer));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n//import for MUI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Box, Typography, Card, CardMedia, CardContent, CardActionArea, CardActions, Button } from '@material-ui/core';\n\n\n//styles to call MUI\nconst styles = () => {\n    return ({\n        page: {\n            margin: '0px',\n            overflow: 'hidden',\n            paddingBottom: '75px',\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'white',\n        },\n        title: {\n            display: 'inline-block',\n            fontSize: '50px',\n            height: '50px',\n            marginTop: '120px',\n            marginBottom: '15px',\n            borderBottom: '2px solid black',\n            width: '100%',\n            paddingLeft: '20px',\n            paddingBottom: '5px'\n        },\n        media: {\n            height: '275px',\n            maxWidth: '400px',\n            position: 'center',\n            width: '100%',\n            boxShadow: '0px 0px 3px 0px'\n        },\n        button: {\n            width: '450px',\n            letterSpacing: '5px',\n            paddingTop: '0px'\n        },\n        card: {\n            boxShadow: '0px 0px 2px #28283e',\n            maxWidth: '90%',\n            margin: '18px 0px',\n            padding: '5px'\n        },\n        grid: {\n            paddingTop: '10px',\n            marginRight: '2%',\n            marginLeft: '1%',\n            width: '100%'\n        },\n    })\n};//end styles\n\nclass HomePage extends Component {\n    componentDidMount() {\n        console.log('Home Page MOUNTED', this.props.reduxState);\n        //dispatch to redux GET\n        this.props.dispatch({\n            type: 'fetch_shoes'\n        });//end dispatch\n        //takes us back to the top of the page when component loaded\n        window.scrollTo(0, 0);\n    };//end componentDidMount\n\n    //this event pushes us to the selected shoe page by id\n    handleClick = (shoe) => {\n        console.log('WHAT IS MY SHOE', shoe);\n        this.props.history.push(`/home/details/${shoe.post_id}`)\n    };//end handleClick\n\n    render() {\n        //allows us to use withStyles in render\n        const { classes } = this.props;\n        return (\n            <Box className={classes.page}>\n                <Typography variant=\"h3\" className={classes.title}>Recent Posts</Typography>\n                {/* BEGIN GRID */}\n                <Grid container className={classes.grid} justify=\"center\" spacing={2}>\n                    {this.props.reduxState.homeReducer.map((shoe, index) => {\n                        return (\n                            <Grid key={index} item md={4} >\n                                {/* allows home page to show all shoes from all categories with ternary */}\n                                {shoe.post_cat === 1 | 2 | 3 &&\n                                    <Card variant=\"outlined\" className={classes.card}>\n                                        <CardActionArea>\n                                            <CardContent>\n                                                <Typography variant=\"h6\">{shoe.post_name}</Typography>\n                                                <CardMedia className={classes.media} onClick={(event) => this.handleClick(shoe)} image={shoe.post_image} title={shoe.post_name} />\n                                            </CardContent>\n                                            <CardActions>\n                                                <Button onClick={(event) => this.handleClick(shoe)} className={classes.button}>DETAILS</Button>\n                                            </CardActions>\n                                        </CardActionArea>\n                                    </Card>\n                                }  {/* END TERNARY */}\n                            </Grid>\n                        )//end return\n                    })} {/* END MAP */}\n                </Grid>\n            </Box>\n        )//end return\n    }//end render\n};//end class\n\n//put props on redux\nconst putPropsOnState = reduxState => ({ reduxState })\n//wrap withStyles to allow MUI styling\nexport default connect(putPropsOnState)(withStyles(styles)(HomePage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n//import MUI\nimport { Grid, Box, Typography, Card, CardMedia, CardContent, CardActionArea, CardActions, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n//import moment for formatting date\nconst moment = require('moment');\n\nconst styles = () => {\n    return ({\n        page: {\n            margin: '0px',\n            overflow: 'hidden',\n            paddingBottom: '75px',\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'white',\n        },\n        title: {\n            display: 'inline-block',\n            fontSize: '50px',\n            height: '50px',\n            marginTop: '120px',\n            marginBottom: '15px',\n            width: '100%',\n            marginRight: '2%',\n            marginLeft: '2%',\n        },\n        description: {\n            marginBottom: '23px',\n            borderBottom: '2px solid black',\n            paddingLeft: '300px',\n            paddingBottom: '5px',\n        },\n        media: {\n            height: '275px',\n            maxWidth: '450px',\n            position: 'center',\n            boxShadow: '0px 0px 1px 0px'\n        },\n        button: {\n            width: '180px',\n            letterSpacing: '5px',\n            paddingTop: '0px',\n        },\n        card: {\n            boxShadow: '0px 0px 2px #28283e',\n            maxWidth: '90%',\n            width: '450px',\n            margin: '18px 0px',\n            padding: '5px'\n        },\n        grid: {\n            paddingTop: '10px',\n            marginRight: '2%',\n            marginLeft: '2%',\n            width: '100%',\n        },\n        createBtn: {\n            width: '250px',\n            letterSpacing: '5px',\n            padding: '3px',\n            marginLeft: '50px',\n        },\n        user: {\n            fontSize: '17px',\n        }\n    })\n};//end styles\n\nclass BuyPage extends Component {\n    componentDidMount() {\n        console.log('Buy Page MOUNTED')\n        //dispatch to our saga GET request to return data\n        this.props.dispatch({\n            type: 'fetch_all'\n        });//end dispatch\n        //takes us back to the top of the page when component loaded\n        window.scrollTo(0, 0);\n    };//end componentDidMount\n\n    handleClick = (shoe) => {\n        console.log('WHAT IS MY SHOE');\n        //on click, takes us to our specified shoe detail page\n        this.props.history.push(`/buy/details/${shoe.post_id}`)\n    };//end handleClick\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Box className={classes.page}>\n                <Typography variant=\"h3\" className={classes.title}>Buyers</Typography>\n                <Typography className={classes.description}>This page views posts where users are looking to buy a shoe. If you would like to create a post,\n                please log in. If you do not have an account please sign up at our log in page.</Typography>\n                {/* This allows the create post button to only appear if a user is logged in. */}\n                {this.props.user.id && (\n                    <>\n                        <Link to=\"/create\"><Button className={classes.createBtn} variant=\"outlined\">Create Post</Button></Link>\n                    </>\n                )}\n                {/* BEGIN GRID */}\n                <Grid container className={classes.grid} justify=\"center\" spacing={2}>\n                    {this.props.reduxState.allShoesReducer.map((shoe, index) => {\n                        let date = moment(shoe.post_date).format('MMM Do, YYYY')\n                        return (\n                            <Grid key={index}>\n                                {/* ternary that allows only shows shoes in category 1, or buy */}\n                                {shoe.post_cat === 1 &&\n                                    <Card variant=\"outlined\" className={classes.card}>\n                                        <CardActionArea>\n                                            <CardContent>\n                                                <Typography variant=\"h6\">{shoe.post_name}</Typography>\n                                                <CardMedia className={classes.media} onClick={(event) => this.handleClick(shoe)} image={shoe.post_image} title={shoe.post_name} />\n                                            </CardContent>\n                                            <CardActions>\n                                                <Button onClick={(event) => this.handleClick(shoe)} className={classes.button}>DETAILS</Button>\n                                                <Typography className={classes.user}>posted by {shoe.username} on {date}</Typography>\n                                                <Typography variant=\"h6\">{shoe.cat_name}</Typography>\n                                            </CardActions>\n                                        </CardActionArea>\n                                    </Card>\n                                }  {/* END TERNARY */}\n                            </Grid>\n                        )//end return\n                    })} {/* END MAP */}\n                </Grid>\n            </Box>\n        )//end return\n    };//end render\n};//end class\n\n//put props on redux\nconst putPropsOnState = reduxState => ({ reduxState, user: reduxState.user });\n//connect to component with withStyles\nexport default connect(putPropsOnState)(withStyles(styles)(BuyPage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n//import MUI\nimport { Grid, Box, Typography, Card, CardMedia, CardContent, CardActionArea, CardActions, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n//import moment for date formatting\nconst moment = require('moment');\n\nconst styles = () => {\n    return ({\n        page: {\n            margin: '0px',\n            overflow: 'hidden',\n            paddingBottom: '75px',\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'white',\n        },\n        title: {\n            display: 'inline-block',\n            fontSize: '50px',\n            height: '50px',\n            marginTop: '120px',\n            marginBottom: '15px',\n            width: '100%',\n            marginRight: '2%',\n            marginLeft: '2%',\n        },\n        description: {\n            marginBottom: '23px',\n            borderBottom: '2px solid black',\n            paddingLeft: '300px',\n            paddingBottom: '5px',\n        },\n        media: {\n            height: '275px',\n            maxWidth: '450px',\n            position: 'center',\n            boxShadow: '0px 0px 1px 0px'\n        },\n        button: {\n            width: '180px',\n            letterSpacing: '5px',\n            paddingTop: '0px',\n        },\n        card: {\n            boxShadow: '0px 0px 2px #28283e',\n            maxWidth: '90%',\n            width: '450px',\n            margin: '18px 0px',\n            padding: '5px'\n        },\n        grid: {\n            paddingTop: '10px',\n            marginRight: '2%',\n            marginLeft: '2%',\n            width: '100%',\n        },\n        createBtn: {\n            width: '250px',\n            letterSpacing: '5px',\n            padding: '3px',\n            marginLeft: '50px',\n        },\n        user: {\n            fontSize: '17px',\n        }\n    })\n};//end styles\n\n\nclass SellPage extends Component {\n\n    componentDidMount() {\n        console.log('SellPage MOUNTED')\n        //retrieve data for our Sell page\n        this.props.dispatch({\n            type: 'fetch_all'\n        });//end dispatch\n        //takes us back to the top of the page when component loaded\n        window.scrollTo(0, 0);\n    };//end componentDidMount\n\n    handleClick = (shoe) => {\n        console.log('WHAT IS MY SHOE');\n        //take us to the details page for the specified shoe\n        this.props.history.push(`/sell/details/${shoe.post_id}`)\n    };//end handleClick\n\n    render() {\n        //allows us to use withStyles\n        const { classes } = this.props;\n        return (\n            <Box className={classes.page}>\n                <Typography variant=\"h3\" className={classes.title}>Sellers</Typography>\n                <Typography className={classes.description}>This page views posts where users are looking to sell a shoe. If you would like to create a post,\n                please log in. If you do not have an account please sign up at our log in page.</Typography>\n                {/* BUTTON APPEARS IF USER */}\n                {this.props.user.id && (\n                    <>\n                        <Link to=\"/create\"><Button className={classes.createBtn} variant=\"outlined\">Create Post</Button></Link>\n                    </>\n                )}\n                {/* BEGIN GRID */}\n                <Grid container className={classes.grid} justify=\"center\" spacing={2}>\n                    {this.props.reduxState.allShoesReducer.map((shoe, index) => {\n                        let date = moment(shoe.post_date).format('MMM Do, YYYY')\n                        return (\n                            <Grid key={index}>\n                                {/* ternary that allows only shoes in category 2, or sell to be shown */}\n                                {shoe.post_cat === 2 &&\n                                    <Card variant=\"outlined\" className={classes.card}>\n                                        <CardActionArea>\n                                            <CardContent>\n                                                <Typography variant=\"h6\">{shoe.post_name}</Typography>\n                                                <CardMedia className={classes.media} onClick={(event) => this.handleClick(shoe)} image={shoe.post_image} title={shoe.post_name} />\n                                            </CardContent>\n                                            <CardActions>\n                                                <Button onClick={(event) => this.handleClick(shoe)} className={classes.button}>DETAILS</Button>\n                                                <Typography className={classes.user}>posted by {shoe.username} on {date}</Typography>\n                                                <Typography variant=\"h6\">{shoe.cat_name}</Typography>\n                                            </CardActions>\n                                        </CardActionArea>\n                                    </Card>\n                                }  {/* END TERNARY */}\n                            </Grid>\n                        )//end return\n                    })} {/* END MAP */}\n                </Grid>\n            </Box>\n        )//end return\n    };//end render\n};//end class\n\n\n//put props on redux\nconst putPropsOnState = reduxState => ({ reduxState, user: reduxState.user })\n//connect redux with component and withStyles\nexport default connect(putPropsOnState)(withStyles(styles)(SellPage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n//import MUI\nimport { Grid, Box, Typography, Card, CardMedia, CardContent, CardActionArea, CardActions, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n//import moment for date formatting\nconst moment = require('moment');\n\nconst styles = () => {\n    return ({\n        page: {\n            margin: '0px',\n            overflow: 'hidden',\n            paddingBottom: '75px',\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'white',\n        },\n        title: {\n            display: 'inline-block',\n            fontSize: '50px',\n            height: '50px',\n            marginTop: '120px',\n            marginBottom: '15px',\n            width: '100%',\n            marginRight: '2%',\n            marginLeft: '2%',\n        },\n        description: {\n            marginBottom: '23px',\n            borderBottom: '2px solid black',\n            paddingLeft: '300px',\n            paddingBottom: '5px',\n        },\n        media: {\n            height: '275px',\n            maxWidth: '450px',\n            position: 'center',\n            boxShadow: '0px 0px 1px 0px'\n        },\n        button: {\n            width: '180px',\n            letterSpacing: '5px',\n            paddingTop: '0px',\n        },\n        card: {\n            boxShadow: '0px 0px 2px #28283e',\n            maxWidth: '90%',\n            width: '450px',\n            margin: '18px 0px',\n            padding: '5px'\n        },\n        grid: {\n            paddingTop: '10px',\n            marginRight: '2%',\n            marginLeft: '2%',\n            width: '100%',\n        },\n        createBtn: {\n            width: '250px',\n            letterSpacing: '5px',\n            padding: '3px',\n            marginLeft: '50px',\n        },\n        user: {\n            fontSize: '17px',\n        }\n    })\n};//end styles\n\nclass TradePage extends Component {\n\n    componentDidMount() {\n        console.log('TradePage MOUNTED', this.props.reduxState.allShoesReducer);\n        //Send a dispatch to get all shoes, will then display on the DOM.\n        this.props.dispatch({\n            type: 'fetch_all'\n        });//end dispatch\n        //takes us back to the top of the page when component loaded\n        window.scrollTo(0, 0);\n    };//end componentDidMount\n\n    handleClick = (shoe) => {\n        //collect data from inside the map and set as shoe, call in handleclick to send to params.\n        console.log('Selecting specific shoe for details from Trade Page.');\n        this.props.history.push(`/trade/details/${shoe.post_id}`)\n    };//end handleClick\n\n    render() {\n        //allows us to use withStyles on props through classes\n        const { classes } = this.props;\n        return (\n            <Box className={classes.page}>\n                <Typography variant=\"h3\" className={classes.title}>Traders</Typography>\n                <Typography className={classes.description}>This page views posts where users are looking to trade a shoe. If you would like to create a post,\n                please log in. If you do not have an account please sign up at our log in page.</Typography>\n                {/* BUTTON APPEARS IF USER */}\n                {this.props.user.id && (\n                    <>\n                        <Link to=\"/create\"><Button className={classes.createBtn} variant=\"outlined\">Create Post</Button></Link>\n                    </>\n                )}\n                {/* BEGIN GRID */}\n                <Grid container className={classes.grid} justify=\"center\" spacing={2}>\n                    {this.props.reduxState.allShoesReducer.map((shoe, index) => {\n                        let date = moment(shoe.post_date).format('MMM Do, YYYY')\n                        return (\n                            <Grid key={index}>\n                                {/* ternary that allows only shows shoes in category 3, or trade*/}\n                                {shoe.post_cat === 3 &&\n                                    <Card variant=\"outlined\" className={classes.card}>\n                                        <CardActionArea>\n                                            <CardContent>\n                                                <Typography variant=\"h6\">{shoe.post_name}</Typography>\n                                                <CardMedia className={classes.media} onClick={(event) => this.handleClick(shoe)} image={shoe.post_image} title={shoe.post_name} />\n                                            </CardContent>\n                                            <CardActions>\n                                                <Button onClick={(event) => this.handleClick(shoe)} className={classes.button}>DETAILS</Button>\n                                                <Typography className={classes.user}>posted by {shoe.username} on {date}</Typography>\n                                                <Typography variant=\"h6\">{shoe.cat_name}</Typography>\n                                            </CardActions>\n                                        </CardActionArea>\n                                    </Card>\n                                }  {/* END TERNARY */}\n                            </Grid>\n                        )//end return\n                    })} {/* END MAP */}\n                </Grid>\n            </Box>\n        )//end return\n    };//end render\n};//end class\n\n//put props on redux\nconst putPropsOnState = reduxState => ({ reduxState, user: reduxState.user });\n//connect redux with component and withStyles\nexport default connect(putPropsOnState)(withStyles(styles)(TradePage));\n","//import sweetalert\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport './create.scss';\n//import react and router\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n//import MUI\nimport { Box, Button, TextField, InputLabel, FormControl, MenuItem, Select, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = theme => {\n    return ({\n        button: {\n            display: 'inline-block',\n            marginLeft: '12%',\n            padding: '10px',\n            marginBottom: '50px',\n        },\n        createBtn: {\n            padding: '14px',\n            marginLeft: '67%',\n            width: '250px'\n        },\n        formControl: {\n            minWidth: '120px',\n            marginLeft: '2%'\n        },\n        header: {\n            display: 'inline-block',\n            height: '50px',\n            marginTop: '120px',\n            marginBottom: '15px',\n            width: '100%',\n            textAlign: 'center',\n            paddingBottom: '38px',\n            borderBottom: '2px solid black',\n        },\n        inputs: {\n            marginLeft: '2%'\n        },\n        title: {\n            width: '300px'\n        },\n        desc: {\n            marginLeft: '20px',\n            width: '1000px'\n        },\n        url: {\n            margin: '30px 0px 50px 0px',\n            width: '1320px'\n        },\n    })\n};//end styles\n\nclass CreatePost extends Component {\n\n    state = {\n        topic: '',\n        open: false,\n        description: '',\n        image: '',\n        title: '',\n        user: this.props.user.id\n    }\n\n    componentDidMount() {\n        console.log('Create Post MOUNTED');\n        //takes us back to the top of the page when component loaded\n        window.scrollTo(0, 0);\n    }\n\n    //manages closing selector\n    handleClose = () => {\n        this.setState({\n            open: false\n        })\n    };//end close of selector\n\n    //manages opening the selector\n    handleOpen = () => {\n        this.setState({\n            open: true\n        })\n    };//end open of selector\n\n    //gets the value data entered to our selector\n    handleChange = (event) => {\n        console.log('You have set the topic value', event.target.value);\n        this.setState({\n            topic: event.target.value\n        })\n    };//end handleChange for topic selector\n\n    //gets the value data entered for our description\n    shoeDesc = (event) => {\n        console.log('adding to the shoe description:', event.target.value);\n        this.setState({\n            description: event.target.value\n        })\n    };//end shoe description\n\n    //gets the image url data\n    imageUrl = (event) => {\n        console.log('adding shoe url:', event.target.value);\n        this.setState({\n            image: event.target.value\n        })\n    };//end shoe description\n\n    //gets the value data entered for our title\n    title = (event) => {\n        console.log('adding shoe title:', event.target.value);\n        this.setState({\n            title: event.target.value\n        })\n    };//end shoe description\n\n    //manages the POST data we've retrieved from our change to state\n    createPost = () => {\n        // console.log('You have clicked Create Post.');\n        //only create post if all inputs have been filled\n        //if one of the inputs are missing, sweetalert to fill inputs!\n        if(this.state.description === '' || this.state.image === '' || this.state.title  === '' || this.state.topic === ''){\n        Swal.fire({\n            title: 'Empty Inputs!',\n            text: 'Please fill in all of the inputs before creating.',\n            confirmButtonText: 'OK'\n        })\n        } else {\n        //if all of the inputs have been filled, sweetalert that post has been created!\n        //send dispatch to POST to our database and take us to our account page\n        this.props.dispatch({\n            type: 'create_post',\n            payload: {\n                description: this.state.description,\n                image: this.state.image,\n                catId: this.state.topic,\n                user: this.props.user.id,\n                title: this.state.title\n            }\n        });//end dispatch\n        this.props.history.push('/account')\n        Swal.fire({\n            title: 'Post has been Created!',\n            icon: 'success',\n            confirmButtonText: 'OK'\n        })\n    }//end if else\n    };//end create post\n\n    render() {\n        // console.log('Create Post MOUNTED 2', this.props.user);\n        //allows us to use withStyles through props on classes\n        const { classes } = this.props;\n        return (\n            <Box>\n                <Typography variant=\"h2\" className={classes.header}>Create A Post</Typography>\n                {/* back buttons */}\n                <Link to=\"/allShoes\"><Button className={classes.button} variant=\"outlined\">All Shoes Page</Button></Link>\n                <Link to=\"/buy\"><Button className={classes.button} variant=\"outlined\">Buyers Page</Button></Link>\n                <Link to=\"/sell\"><Button className={classes.button} variant=\"outlined\">Sellers Page</Button></Link>\n                <Link to=\"/trade\"><Button className={classes.button} variant=\"outlined\">Traders Page</Button></Link >\n                {/* input fields, data will be gathered through function */}\n                <Box className={classes.inputs}>\n                    <TextField className={classes.title} onChange={(event) => this.title(event)} label=\"post title\" variant=\"outlined\" />\n                    <TextField className={classes.desc} onChange={(event) => this.shoeDesc(event)} label=\"description of shoe and best contact method\" multiline rowsMax={5} variant=\"filled\"  />\n                    <TextField className={classes.url} onChange={(event) => this.imageUrl(event)} label=\"image url address\" variant=\"outlined\" />\n                </Box>\n                {/* Begin selector and send selected data to our function.*/}\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Topic</InputLabel>\n                    <Select\n                        variant=\"outlined\"\n                        open={this.state.open}\n                        onClose={this.handleClose}\n                        onOpen={this.handleOpen}\n                        value={this.state.topic}\n                        onChange={(event) => this.handleChange(event)}>\n                        <MenuItem value={1}><em>Buy</em></MenuItem>\n                        <MenuItem value={2}><em>Sell</em></MenuItem>\n                        <MenuItem value={3}><em>Trade</em></MenuItem>\n                    </Select>\n                </FormControl>\n                <Button className={classes.createBtn} variant=\"outlined\" size=\"large\" onClick={this.createPost}>Create</Button>\n            </Box>\n        )//end return\n    };//end render\n};//end class\n\n\nconst reduxStateOnProps = state => ({ user }) => ({ user: state.user });\n// const putPropsOnState = reduxState => ({reduxState})\nexport default connect(reduxStateOnProps)(withStyles(styles)(CreatePost));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n//import MUI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Typography, Card, CardMedia, CardContent, CardActionArea, CardActions } from '@material-ui/core';\n//require moment for time\nconst moment = require('moment');\n\nconst styles = () => {\n    return ({\n        title: {\n            display: 'flex',\n            fontSize: '60px',\n            height: '50px',\n            marginTop: '70px',\n            marginBottom: '40px',\n            width: '100%',\n            marginRight: '2%',\n            marginLeft: '2%',\n        },\n        button: {\n            marginLeft: '5%',\n            marginTop: '15px',\n            width: '200px',\n            letterSpacing: '3px',\n        },\n        media: {\n            height: '450px',\n            width: '750px',\n            boxShadow: '0px 0px 5px',\n            marginLeft: '5%',\n        },\n        card: {\n            boxShadow: '0px 0px 3px',\n        },\n        desc: {\n            marginLeft: '2%',\n            fontSize: '20px',\n            borderTop: '1px solid black',\n            paddingBottom: '100px'\n        },\n        user: {\n            marginLeft: '2%',\n            display: 'wrap',\n            marginBottom: '5px',\n        },\n    })\n};//end styles\n\nclass BuySelectShoe extends Component {\n    componentDidMount() {\n        console.log('BuySelectShoe MOUNTED');\n        //send data to grab specific shoe\n        this.props.dispatch({\n            type: 'fetch_buy_detail',\n            payload: this.props.match.params.id\n        });//end dispatch\n        //takes us back to the top of the page when component loaded\n        window.scrollTo(0, 0);\n    };//end componentDidMount\n\n    render() {\n        //allows us to use withStyles on props through classes\n        const { classes } = this.props;\n        return (\n            <Grid>\n                {/* Map through our reducer for specific details that have been passed */}\n                {this.props.detail.map((shoe) => {\n                    // set variable for moment that way we can display it using the moment function\n                    let date = moment(shoe.post_date).format('MMM Do, YYYY');\n                    return (\n                        <Card className={classes.card} variant=\"outlined\" key=\"shoe.post_id\">\n                            <CardActionArea>\n                                <CardContent>\n                                    <Typography className={classes.title}>{shoe.post_name}</Typography>\n                                    <Typography className={classes.user}>Posted by {shoe.username} on {date} | Topic: {shoe.cat_name}</Typography>\n                                    <Typography className={classes.desc}>{shoe.post_body}</Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActionArea>\n                                <CardMedia className={classes.media} image={shoe.post_image} title={shoe.post_name} />\n                                <CardActions>\n                                    <Link to=\"/buy\"><Button className={classes.button} variant=\"outlined\">Back To List</Button></Link>\n                                </CardActions>\n                            </CardActionArea>\n                        </Card>\n                    )//end return\n                })}\n            </Grid>\n        )//end return\n    };//end render\n};//end class\n\n//put props on redux\nconst putPropsOnState = reduxState => ({ reduxState, detail: reduxState.details })\n//connect component and redux and withStyles\nexport default connect(putPropsOnState)(withStyles(styles)(BuySelectShoe));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n//import MUI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Typography, Card, CardMedia, CardContent, CardActionArea, CardActions } from '@material-ui/core';\n//require moment for time\nconst moment = require('moment');\n\nconst styles = () => {\n    return ({\n        title: {\n            display: 'flex',\n            fontSize: '60px',\n            height: '50px',\n            marginTop: '70px',\n            marginBottom: '40px',\n            width: '100%',\n            marginRight: '2%',\n            marginLeft: '2%',\n        },\n        button: {\n            marginLeft: '5%',\n            marginTop: '15px',\n            width: '200px',\n            letterSpacing: '3px',\n        },\n        media: {\n            height: '450px',\n            width: '750px',\n            boxShadow: '0px 0px 5px',\n            marginLeft: '5%',\n        },\n        card: {\n            boxShadow: '0px 0px 3px',\n        },\n        desc: {\n            marginLeft: '2%',\n            fontSize: '20px',\n            borderTop: '1px solid black',\n            paddingBottom: '100px'\n        },\n        user: {\n            marginLeft: '2%',\n            display: 'wrap',\n            marginBottom: '5px',\n        },\n    })\n};//end styles\n\nclass SellSelectShoe extends Component {\n\n    componentDidMount() {\n        console.log('SELL SELECT SHOE MOUNTED')\n        // retrieve data for our specified shoe\n        this.props.dispatch({\n            type: 'fetch_sell_detail',\n            payload: this.props.match.params.id\n        })\n        //takes us back to the top of the page when component loaded\n        window.scrollTo(0, 0);\n    };//end componentDidMount\n\n    render() {\n        //allows us to use withStyles\n        const { classes } = this.props;\n        return (\n            <Grid>\n                {/* Map through all the home page shoes to display on the DOM */}\n                {this.props.detail.map((shoe) => {\n                    // set variable for moment that way we can display it using the moment function\n                    let date = moment(shoe.post_date).format('MMM Do, YYYY');\n                    return (\n                        <Card className={classes.card} variant=\"outlined\" key=\"shoe.post_id\">\n                            <CardActionArea>\n                                <CardContent>\n                                    <Typography className={classes.title}>{shoe.post_name}</Typography>\n                                    <Typography className={classes.user}>Posted by {shoe.username} on {date} | Topic: {shoe.cat_name}</Typography>\n                                    <Typography className={classes.desc}>{shoe.post_body}</Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActionArea>\n                                <CardMedia className={classes.media} image={shoe.post_image} title={shoe.post_name} />\n                                <CardActions>\n                                    <Link to=\"/sell\"><Button className={classes.button} variant=\"outlined\">Back To List</Button></Link>\n                                </CardActions>\n                            </CardActionArea>\n                        </Card>\n                    )//end return\n                })}\n            </Grid>\n        )//end return\n    };//end render\n};//end class\n\n//put props on redux\nconst putPropsOnState = reduxState => ({ reduxState, detail: reduxState.details })\n//connect redux to component and withStyles\nexport default connect(putPropsOnState)(withStyles(styles)(SellSelectShoe));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n//import MUI.\nimport { Button, Grid, Typography, Card, CardMedia, CardContent, CardActionArea, CardActions } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n//require moment so that we can format our date correctly.\nconst moment = require('moment');\n\nconst styles = () => {\n    return ({\n        title: {\n            display: 'flex',\n            fontSize: '60px',\n            height: '50px',\n            marginTop: '70px',\n            marginBottom: '40px',\n            width: '100%',\n            marginRight: '2%',\n            marginLeft: '2%',\n        },\n        button: {\n            marginLeft: '5%',\n            marginTop: '15px',\n            width: '200px',\n            letterSpacing: '3px',\n        },\n        media: {\n            height: '450px',\n            width: '750px',\n            boxShadow: '0px 0px 5px',\n            marginLeft: '5%',\n        },\n        card: {\n            boxShadow: '0px 0px 3px',\n        },\n        desc: {\n            marginLeft: '2%',\n            fontSize: '20px',\n            borderTop: '1px solid black',\n            paddingBottom: '100px'\n        },\n        user: {\n            marginLeft: '2%',\n            display: 'wrap',\n            marginBottom: '5px',\n        },\n    })\n}//end styles\n\nclass HomeSelectShoe extends Component {\n    componentDidMount() {\n        console.log('HomeSelectShoe MOUNTED');\n        //we want to send our shoe id data back to our saga so that we can specify on our details page.\n        this.props.dispatch({\n            type: 'fetch_home_detail',\n            payload: this.props.match.params.id\n        })\n    };//end componentDidMount\n\n    render() {\n        //allows us to use withStyles with class component.\n        const { classes } = this.props;\n        return (\n            <Grid>\n                {/* Map through all the home page shoes to display on the DOM */}\n                {this.props.detail.map((shoe) => {\n                    let date = moment(shoe.post_date).format('MMM Do, YYYY');\n                    return (\n                        <Card className={classes.card} variant=\"outlined\" key=\"shoe.post_id\">\n                            <CardActionArea>\n                                <CardContent>\n                                    <Typography className={classes.title}>{shoe.post_name}</Typography>\n                                    <Typography className={classes.user}>Posted by {shoe.username} on {date} | Topic: {shoe.cat_name}</Typography>\n                                    <Typography className={classes.desc}>{shoe.post_body}</Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActionArea>\n                                <CardMedia className={classes.media} image={shoe.post_image} title={shoe.post_name} />\n                                <CardActions>\n                                    <Link to=\"/home\"><Button className={classes.button} variant=\"outlined\">Back Home</Button></Link>\n                                </CardActions>\n                            </CardActionArea>\n                        </Card>\n                    )//end return\n                })}\n            </Grid>\n        )//end return\n    }//end render\n};//end class\n\n//put props on redux\nconst putPropsOnState = reduxState => ({ reduxState, detail: reduxState.details })\n//connect withStyles and props to component\nexport default connect(putPropsOnState)(withStyles(styles)(HomeSelectShoe));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n//import MUI\nimport { Grid, Box, Typography, Card, CardMedia, CardContent, CardActionArea, CardActions, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n//import moment for formatting date\nconst moment = require('moment');\n\nconst styles = () => {\n    return ({\n        page: {\n            margin: '0px',\n            overflow: 'hidden',\n            paddingBottom: '75px',\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'white',\n        },\n        title: {\n            display: 'inline-block',\n            fontSize: '50px',\n            height: '50px',\n            marginTop: '120px',\n            marginBottom: '15px',\n            width: '100%',\n            marginRight: '2%',\n            marginLeft: '2%',\n        },\n        description: {\n            marginBottom: '23px',\n            borderBottom: '2px solid black',\n            paddingLeft: '300px',\n            paddingBottom: '5px'\n        },\n        media: {\n            height: '275px',\n            maxWidth: '450px',\n            position: 'center',\n            width: '100%',\n            boxShadow: '0px 0px 1px 0px'\n        },\n        button: {\n            width: '180px',\n            letterSpacing: '5px',\n            paddingTop: '0px',\n        },\n        card: {\n            boxShadow: '0px 0px 2px #28283e',\n            maxWidth: '90%',\n            width: '450px',\n            margin: '18px 0px',\n            padding: '5px'\n        },\n        grid: {\n            paddingTop: '10px',\n            marginRight: '2%',\n            marginLeft: '1%',\n            width: '100%'\n        },\n        createBtn: {\n            width: '250px',\n            letterSpacing: '5px',\n            padding: '3px',\n            marginLeft: '50px',\n        },\n        user: {\n            fontSize: '17px',\n        }\n    })\n};//end styles\n\n\nclass AllShoes extends Component {\n    componentDidMount() {\n        console.log('AllShoes MOUNTED');\n        //GET request to saga which will retrieve data from DB and send to our reducer.\n        this.props.dispatch({\n            type: 'fetch_all'\n        });//end dispatch\n        //takes us back to the top of the page when component loaded\n        window.scrollTo(0, 0);\n    };//end componentDidMount\n\n    handleClick = (shoe) => {\n        //when the image is clicked, send us to the details page for that specifc shoe.\n        this.props.history.push(`/allShoes/details/${shoe.post_id}`)\n    };//end handleClick\n\n    render() {\n        //allows us to use withStyles\n        const { classes } = this.props;\n        return (\n            <Box className={classes.page}>\n                <Typography variant=\"h3\" className={classes.title}>All Shoes</Typography>\n                <Typography className={classes.description}>This page views all of our posts. If you would like to create a post, please log in. If you do not have\n                an account please sign up at our log in page.</Typography>\n                {/* BUTTON APPEARS IF USER */}\n                {this.props.user.id && (\n                    <>\n                        <Link to=\"/create\"><Button className={classes.createBtn} variant=\"outlined\">Create Post</Button></Link>\n                    </>\n                )}\n                {/* BEGIN GRID */}\n                <Grid container className={classes.grid} justify=\"center\" spacing={2}>\n                    {this.props.reduxState.allShoesReducer.map((shoe, index) => {\n                        let date = moment(shoe.post_date).format('MMM Do, YYYY')\n                        return (\n                            <Grid key={index}>\n                                {/* allows home page to show all shoes from all categories with ternary */}\n                                {shoe.post_cat === 1 | 2 | 3 &&\n                                    <Card variant=\"outlined\" className={classes.card}>\n                                        <CardActionArea>\n                                            <CardContent>\n                                                <Typography variant=\"h6\">{shoe.post_name}</Typography>\n                                                <CardMedia className={classes.media} onClick={(event) => this.handleClick(shoe)} image={shoe.post_image} title={shoe.post_name} />\n                                            </CardContent>\n                                            <CardActions>\n                                                <Button onClick={(event) => this.handleClick(shoe)} className={classes.button}>DETAILS</Button>\n                                                <Typography className={classes.user}>posted by {shoe.username} on {date}</Typography>\n                                                <Typography variant=\"h6\">{shoe.cat_name}</Typography>\n                                            </CardActions>\n                                        </CardActionArea>\n                                    </Card>\n                                }  {/* END TERNARY */}\n                             </Grid>\n                        )//end return\n                    })} {/* END MAP */}\n                </Grid>\n            </Box>\n        )//end return\n    };//end render\n};//end class\n\n//connect redux to props\nconst putPropsOnState = reduxState => ({ reduxState, user: reduxState.user })\n//connect to component with withStyles\nexport default connect(putPropsOnState)(withStyles(styles)(AllShoes));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n//import MUI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Typography, Card, CardMedia, CardContent, CardActionArea, CardActions } from '@material-ui/core';\n//require moment for time\nconst moment = require('moment');\n\nconst styles = () => {\n    return ({\n        title: {\n            display: 'flex',\n            fontSize: '60px',\n            height: '50px',\n            marginTop: '70px',\n            marginBottom: '40px',\n            width: '100%',\n            marginRight: '2%',\n            marginLeft: '2%',\n        },\n        button: {\n            marginLeft: '5%',\n            marginTop: '15px',\n            width: '200px',\n            letterSpacing: '3px',\n        },\n        media: {\n            height: '450px',\n            width: '750px',\n            boxShadow: '0px 0px 5px',\n            marginLeft: '5%',\n        },\n        card: {\n            boxShadow: '0px 0px 3px',\n        },\n        desc: {\n            marginLeft: '2%',\n            fontSize: '20px',\n            borderTop: '1px solid black',\n            paddingBottom: '100px'\n        },\n        user: {\n            marginLeft: '2%',\n            display: 'wrap',\n            marginBottom: '5px',\n        },\n    })\n};//end styles\n\nclass TradeSelectShoe extends Component {\n\n    componentDidMount() {\n        console.log('TradeSelectShoe MOUNTED')\n        //retrieve data for our speicfied shoe\n        this.props.dispatch({\n            type: 'fetch_trade_detail',\n            payload: this.props.match.params.id\n        })\n        //takes us back to the top of the page when component loaded\n        window.scrollTo(0, 0);\n    };//end componentDidMount\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Grid>\n                {/* Map through all the home page shoes to display on the DOM */}\n                {this.props.detail.map((shoe) => {\n                    // set variable for moment that way we can display it using the moment function\n                    let date = moment(shoe.post_date).format('MMM Do, YYYY');\n                    return (\n                        <Card className={classes.card} variant=\"outlined\" key=\"shoe.post_id\">\n                            <CardActionArea>\n                                <CardContent>\n                                    <Typography className={classes.title}>{shoe.post_name}</Typography>\n                                    <Typography className={classes.user}>Posted by {shoe.username} on {date} | Topic: {shoe.cat_name}</Typography>\n                                    <Typography className={classes.desc}>{shoe.post_body}</Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActionArea>\n                                <CardMedia className={classes.media} image={shoe.post_image} title={shoe.post_name} />\n                                <CardActions>\n                                    <Link to=\"/trade\"><Button className={classes.button} variant=\"outlined\">Back To List</Button></Link>\n                                </CardActions>\n                            </CardActionArea>\n                        </Card>\n                    )//end return\n                })}\n            </Grid>\n        )//end return\n    }//end render\n};//end class\n\n\n//put redux on props\nconst putStateOnProps = reduxState => ({ reduxState, detail: reduxState.details })\n//connect redux with component and withStyles\nexport default connect(putStateOnProps)(withStyles(styles)(TradeSelectShoe));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n//import MUI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Typography, Card, CardMedia, CardContent, CardActionArea, CardActions } from '@material-ui/core';\n//require moment for time\nconst moment = require('moment');\n\n\nconst styles = () => {\n    return ({\n        title: {\n            display: 'flex',\n            fontSize: '60px',\n            height: '50px',\n            marginTop: '70px',\n            marginBottom: '40px',\n            width: '100%',\n            marginRight: '2%',\n            marginLeft: '2%',\n        },\n        button: {\n            marginLeft: '5%',\n            marginTop: '15px',\n            width: '200px',\n            letterSpacing: '3px',\n        },\n        media: {\n            height: '450px',\n            width: '750px',\n            boxShadow: '0px 0px 5px',\n            marginLeft: '5%',\n        },\n        card: {\n            boxShadow: '0px 0px 3px',\n        },\n        desc: {\n            marginLeft: '2%',\n            fontSize: '20px',\n            borderTop: '1px solid black',\n            paddingBottom: '100px'\n        },\n        user: {\n            marginLeft: '2%',\n            display: 'wrap',\n            marginBottom: '5px',\n        },\n    })\n};//end styles\n\nclass AllSelectShoe extends Component {\n\n    componentDidMount() {\n        console.log('AllSelectShoe MOUNTED');\n        //we want to send our shoe id data back to our saga so that we can specify on our details page.\n        this.props.dispatch({\n            type: 'fetch_all_detail',\n            payload: this.props.match.params.id\n        })\n        //takes us back to the top of the page when component loaded\n        window.scrollTo(0, 0);\n    };//end componentDidMount\n\n    render() {\n        //allows us to use MUI withStyles in render\n        const { classes } = this.props;\n        return (\n            <Grid>\n                {/* Map through all the home page shoes to display on the DOM */}\n                {this.props.detail.map((shoe) => {\n                    // set variable for moment that way we can display it using the moment function\n                    let date = moment(shoe.post_date).format('MMM Do, YYYY');\n                    return (\n                        <Card className={classes.card} variant=\"outlined\" key=\"shoe.post_id\">\n                            <CardActionArea>\n                                <CardContent>\n                                    <Typography className={classes.title}>{shoe.post_name}</Typography>\n                                    <Typography className={classes.user}>Posted by {shoe.username} on {date} | Topic: {shoe.cat_name}</Typography>\n                                    <Typography className={classes.desc}>{shoe.post_body}</Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActionArea>\n                                <CardMedia className={classes.media} image={shoe.post_image} title={shoe.post_name} />\n                                <CardActions>\n                                    <Link to=\"/allShoes\"><Button className={classes.button} variant=\"outlined\">Back To List</Button></Link>\n                                </CardActions>\n                            </CardActionArea>\n                        </Card>\n                    )//end return\n                })}\n            </Grid>\n        )\n    }//end render\n};//end class\n\n//connect redux to props\nconst putPropsOnState = reduxState => ({ reduxState, detail: reduxState.details })\n//connect to component and withStyles\nexport default connect(putPropsOnState)(withStyles(styles)(AllSelectShoe));","//import sweetalert\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport './user.scss';\n//import react and browser\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n//import MUI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Box, Button, TextField, FormControl, MenuItem, Select, Typography, Card, CardContent, CardMedia, InputLabel } from '@material-ui/core';\n//require moment for date formatting\nconst moment = require('moment');\n\n\n\nconst styles = theme => {\n    return ({\n        button: {\n            lettingSpacing: '2px',\n        },\n        formControl: {\n            minWidth: '120px',\n            marginLeft: '2%',\n            paddingBottom: '20px'\n        },\n        header: {\n            display: 'inline-block',\n            height: '50px',\n            marginTop: '120px',\n            marginBottom: '15px',\n            width: '100%',\n            textAlign: 'center',\n            paddingBottom: '38px',\n            borderBottom: '2px solid black',\n        },\n        backBtn: {\n            marginLeft: '2%',\n            padding: '7px',\n            letterSpacing: '3px',\n            marginBottom: '10px',\n        },\n        desc: {\n            minWidth: '1000px',\n            minHeight: '100px',\n            padding: '5px'\n        },\n        title: {\n            padding: '5px',\n            width: '300px',\n            textSize: '40px'\n        },\n        contTitle: {\n            marginLeft: '2%',\n            margin: '10px 0px 10px 0px',\n            paddingRight: '50px'\n        },\n        selector: {\n            width: '200px'\n        },\n        submitBtn: {\n            marginLeft: '2%',\n            padding: '10px',\n            lettingSpacing: '2px',\n        },\n        deleteBtn: {\n            padding: '10px',\n            lettingSpacing: '2px',\n            marginLeft: '2%',\n        },\n        media: {\n            height: '500px',\n            maxWidth: '750px',\n            boxShadow: '0px 0px 2px'\n        }\n    })\n};//end styles\n\nclass UserEditShoe extends Component {\n\n    //state where we can set our data that we want to edit/send\n    //this.props.editShoe.----\n    state = {\n        open: false,\n        topic: ''\n    }\n\n    componentDidMount() {\n        console.log('UserEditShoe MOUNTED');\n        //send data to get specified shoe\n        this.props.dispatch({\n            type: 'fetch_edit_shoe',\n            payload: this.props.match.params.id\n        })\n        //takes us back to the top of the page when component loaded\n        window.scrollTo(0, 0);\n    }//end componentDidMount\n\n    //manage close and open options for topic selector\n    handleClose = () => {\n        this.setState({\n            open: false\n        })\n    };//end close of selector\n    handleOpen = () => {\n        this.setState({\n            open: true\n        })\n    };//end open of selector\n\n    //manages your new topic as needed.\n    handleChange = (event) => {\n        console.log('You have set the new topic', event.target.value);\n        this.setState({\n            topic: event.target.value\n        })\n        this.props.dispatch({\n            type: 'change_category',\n            payload: event.target.value\n        })\n    };//end handleChange\n\n    //manages title change\n    handleTitle = (event) => {\n        this.props.dispatch({\n            type: 'change_title',\n            payload: event.target.value\n        })\n    };//end handleTitle\n\n    //manages description change\n    handleDesc = (event) => {\n        this.props.dispatch({\n            type: 'change_description',\n            payload: event.target.value\n        })\n    };//end handleDesc\n\n    //manages submitting information with PUT\n    handleSubmit = () => {\n        console.log('UPDATING data');\n        //send our new data to our saga to send to database\n        this.props.dispatch({\n            type: 'edit_shoe',\n            payload: {\n                shoe: this.props.editShoe,\n                updatedDate: moment().format()\n            }\n        })\n        //takes you back to your shoes\n        this.props.history.push(`/account`);\n    };//end handelSubmit\n\n    //manages deleting information with DELETE\n    handleDelete = () => {\n        Swal.fire({\n            title: 'Delete your post?',\n            icon: 'question',\n            confirmButtonText: 'Delete it anyways.',\n            confirmButtonColor: '#cc0000',\n            showCancelButton: true,\n            cancelButtonText: 'Keep the post.'\n        }).then((result) => {\n            //dispatch if delete is okay'ed\n            if (result.value) {\n                this.props.dispatch({\n                    type: 'delete',\n                    payload: this.props.match.params.id\n                })\n                //confirm our deletion\n                Swal.fire({\n                    title: 'Deleted!',\n                    icon: 'success',\n                })\n                //take us to account page\n                this.props.history.push(`/account`);\n            }//end if statement\n        })//end sweetalert\n    };//end handleDelete\n\n\n    render() {\n        const { classes } = this.props;\n        let shoe = this.props.editShoe;\n        // console.log('What is the date the shoe was posted:', shoe.post_date)\n        return (\n            <Box>\n                <Button>HEllO</Button>\n                <Typography variant=\"h2\" className={classes.header}>Edit Your Shoe Info</Typography>\n                <Link to=\"/account\"><Button className={classes.backBtn} variant=\"outlined\">Go Back To My Shoes</Button></Link>\n                {/* Data below will be a part of PUT */}\n                <Box>\n                    <Typography className={classes.contTitle} variant=\"h4\">Title: <TextField className={classes.title} onChange={(event) => this.handleTitle(event)} value={shoe.post_name} /></Typography>\n                    <Typography className={classes.contTitle} variant=\"h4\">Description: <TextField className={classes.desc} onChange={(event) => this.handleDesc(event)} value={shoe.post_body} multiline rowsMax={5} variant=\"filled\" /></Typography>\n                    {/* SELECTOR OPTION FROM MUI */}\n                    <Typography variant=\"h4\" className={classes.contTitle}>Current Topic: {shoe.cat_name}</Typography>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel>{shoe.cat_name}</InputLabel>\n                        <Select\n                            className={classes.selector}\n                            variant=\"outlined\"\n                            open={this.state.open}\n                            onClose={this.handleClose}\n                            onOpen={this.handleOpen}\n                            value={this.state.topic}\n                            onChange={(event) => this.handleChange(event)}>\n                            <MenuItem value={1}><em>Buy</em></MenuItem>\n                            <MenuItem value={2}><em>Sell</em></MenuItem>\n                            <MenuItem value={3}><em>Trade</em></MenuItem>\n                        </Select>\n                    </FormControl>\n                    {/* only allows users who are logged in as the user to view the page */}\n                    <Box>\n                        {this.props.user.id === shoe.user_id &&\n                            <>\n                                <Button className={classes.submitBtn} onClick={this.handleSubmit} variant=\"outlined\">Submit Changes</Button>\n                                <Button className={classes.deleteBtn} onClick={this.handleDelete} variant=\"outlined\">delete</Button>\n                            </>\n                        }\n                    </Box>\n                    {/* Displays Image on the DOM */}\n                    <Card>\n                        <CardContent>\n                            <CardMedia className={classes.media} image={shoe.post_image} title={shoe.post_name} />\n                        </CardContent>\n                    </Card>\n                </Box>\n            </Box>\n        )\n    }\n};//end class\n\nconst putPropsOnState = reduxState => ({ reduxState, user: reduxState.user, editShoe: reduxState.editShoeReducer, theShoe: reduxState.shoeToEdit })\nexport default connect(putPropsOnState)(withStyles(styles)(UserEditShoe));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n//import MUI\nimport { Button, Box, TextField, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => {\n  return ({\n    box: {\n      display: 'inline-block',\n      height: '55vh',\n      marginTop: '100px',\n      width: '100%',\n    },\n    alert: {\n      display: 'inline-block',\n      float: 'right',\n      marginRight: '10px',\n      marginTop: '120px',\n      fontSize: '40px',\n      padding: '50px'\n    },\n    title: {\n      borderBottom: '1px solid black',\n      paddingLeft: '30px'\n    },\n    inputs: {\n      marginTop: '50px',\n      marginLeft: '30px'\n    },\n    input1: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    text1: {\n      width: '200px',\n      height: '70px',\n    },\n    divider: {\n      borderTop: '1px solid black'\n    }\n  })\n};//end styles\n\nclass LoginPage extends Component {\n  //state set for on change of username and password input\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    //allows us to use MUI on props\n    const { classes } = this.props;\n    return (\n      <Box>\n        <form className={classes.box} onSubmit={this.login}>\n          {this.props.errors.loginMessage && (\n            <Alert severity=\"error\" className={classes.alert} role=\"alert\">\n              {this.props.errors.loginMessage}\n            </Alert>\n          )}\n          <Typography className={classes.title} variant=\"h2\">Login</Typography>\n          <Box className={classes.inputs}>\n            <Box className={classes.input1}>\n              <label htmlFor=\"username\">\n                <TextField className={classes.text1} label=\"Username\" type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleInputChangeFor('username')} />\n              </label>\n            </Box>\n            <Box className={classes.input1}>\n              <label htmlFor=\"password\">\n                <TextField className={classes.text1} label=\"Password\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInputChangeFor('password')} />\n              </label>\n            </Box>\n            <Button variant=\"outlined\" type=\"submit\" name=\"submit\">Log In</Button>\n          </Box>\n        </form>\n        <center className={classes.divider}>\n          <Typography>Don't have an account?</Typography>\n          <Button type=\"button\" variant=\"outlined\" onClick={() => { this.props.dispatch({ type: 'SET_TO_REGISTER_MODE' }) }}>Sign Up</Button>\n        </center>\n      </Box>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n//connect redux with withStyles and our component\nexport default connect(mapStateToProps)(withStyles(styles)(LoginPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n//import MUI\nimport { Button, Box, TextField, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => {\n  return ({\n    box: {\n      display: 'inline-block',\n      height: '55vh',\n      marginTop: '100px',\n      width: '100%',\n    },\n    alert: {\n      display: 'inline-block',\n      float: 'right',\n      marginRight: '10px',\n      marginTop: '120px',\n      fontSize: '40px',\n      padding: '50px'\n    },\n    title: {\n      borderBottom: '1px solid black',\n      paddingLeft: '30px'\n    },\n    inputs: {\n      marginTop: '50px',\n      marginLeft: '30px'\n    },\n    input1: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      paddingTop: '15px',\n    },\n    text1: {\n      width: '200px',\n      height: '70px',\n    },\n    divider: {\n      marginTop: '20px',\n      borderTop: '1px solid black'\n    },\n  })\n};//end styles\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    email: '',\n    location: ''\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n          email: this.state.email,\n          location: this.state.location\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'REGISTRATION_INPUT_ERROR' });\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Box>\n        <form className={classes.box} onSubmit={this.registerUser}>\n          <Typography variant=\"h2\" className={classes.title}>Create an Account</Typography>\n          {this.props.errors.registrationMessage && (\n            <Alert severity=\"error\" className={classes.alert} role=\"alert\" >\n              {this.props.errors.registrationMessage}\n            </Alert>\n          )}\n          <Box className={classes.inputs}>\n            {/* username input */}\n            <Box className={classes.input1}>\n              <label htmlFor=\"username\">\n                <TextField className={classes.text1} size=\"medium\" label=\"Username\" type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleInputChangeFor('username')} />\n              </label>\n            </Box>\n            {/* password input */}\n            <Box className={classes.input1}>\n              <label htmlFor=\"password\">\n                <TextField className={classes.text1} size=\"medium\" label=\"Password\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInputChangeFor('password')} />\n              </label>\n            </Box>\n            {/* email input */}\n            <Box className={classes.input1}>\n              <label htmlFor=\"email\">\n                <TextField className={classes.text1} size=\"medium\" label=\"Email\" type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleInputChangeFor('email')} />\n              </label>\n            </Box>\n            {/* sign up button */}\n            <Button variant=\"outlined\" type=\"submit\" name=\"submit\" value=\"Sign Up\">Sign Up</Button>\n          </Box>\n        </form>\n        <center className={classes.divider}>\n          <Typography>Already have an account?</Typography>\n          <Button variant=\"outlined\" type=\"button\" className=\"link-button\" onClick={() => { this.props.dispatch({ type: 'SET_TO_LOGIN_MODE' }) }}>\n            Login\n          </Button>\n        </center>\n      </Box>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n//connect redux to props and withStyles with our component\nexport default connect(mapStateToProps)(withStyles(styles)(RegisterPage));\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React from 'react';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst AboutPage = () => (\n  <div>\n    <div>\n      <p>\n        This about page is for anyone to read!\n      </p>\n    </div>\n  </div>\n);\n\nexport default AboutPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n//import MUI\nimport { Grid, Box, Typography, Card, CardMedia, CardContent, CardActionArea, CardActions, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nconst moment = require('moment');\n\nconst styles = () => {\n  return ({\n    page: {\n      margin: '0px',\n      overflow: 'hidden',\n      paddingBottom: '75px',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'white',\n    },\n    title: {\n      display: 'inline-block',\n      height: '50px',\n      marginTop: '120px',\n      marginBottom: '15px',\n      width: '100%',\n      textAlign: 'center',\n      paddingBottom: '38px',\n      borderBottom: '2px solid black'\n    },\n    description: {\n      marginBottom: '23px',\n      borderBottom: '2px solid black',\n      paddingLeft: '300px',\n      paddingBottom: '5px'\n    },\n    media: {\n      height: '275px',\n      maxWidth: '450px',\n      position: 'center',\n      boxShadow: '0px 0px 1px 0px'\n    },\n    button: {\n      width: '180px',\n      letterSpacing: '5px',\n      paddingTop: '5px',\n    },\n    card: {\n      boxShadow: '0px 0px 2px #28283e',\n      maxWidth: '90%',\n      width: '450px',\n      margin: '18px 0px',\n      padding: '5px'\n    },\n    shoeGrid: {\n      paddingTop: '10px',\n      marginRight: '2%',\n      marginLeft: '1%',\n      width: '100%'\n    },\n    user: {\n      fontSize: '17px',\n    },\n    welcomeGrid: {\n      width: '100%'\n    },\n    name: {\n      fontSize: '60px',\n      fontStyle: 'oblique',\n    }\n  })\n};//end styles\n\nclass UserPage extends Component {\n  componentDidMount() {\n    console.log('UserPage MOUTED');\n    // console.log(`CHECK THE DATE`, date);\n    this.props.dispatch({\n      type: 'fetch_account'\n    });//end dispatch\n    //takes us back to the top of the page when component loaded\n    window.scrollTo(0, 0);\n    //reload page when loaded\n    // window.location.reload();\n  };//end componentDidMount\n\n  handleEdit = (shoe) => {\n    console.log('Take me to the Edit Page.');\n    this.props.history.push(`/account/edit/${shoe.post_id}`);\n  }//end handleEdit\n\n  render() {\n    //format the date to month day, year\n    let date = moment(this.props.user.user_date).format(`MMM Do, YYYY`);\n    let username = this.props.user.username;\n    const { classes } = this.props;\n    return (\n      <Box className={classes.page}>\n        <Typography variant=\"h5\" className={classes.title}><Typography className={classes.name}>{username}</Typography>  been a member since: {date}</Typography>\n        {/* BEGIN GRID to display users shoes */}\n        <Grid container className={classes.shoeGrid} justify=\"center\" spacing={2}>\n          {this.props.account.map((shoe, index) => {\n            let date = moment(shoe.post_date).format('MMM Do, YYYY')\n            return (\n              <Grid key={index}>\n                {/* ternary that shows all shoes sold by this user*/}\n                {shoe.post_cat === 1 | 2 | 3 &&\n                  <Card variant=\"outlined\" className={classes.card}>\n                    <CardActionArea>\n                      <CardContent>\n                        <Typography variant=\"h6\">{shoe.post_name}</Typography>\n                        <CardMedia className={classes.media} image={shoe.post_image} title={shoe.post_name} />\n                      </CardContent>\n                      <CardActions>\n                        <Button variant=\"outlined\" onClick={(event) => this.handleEdit(shoe)} className={classes.button}>EDIT</Button>\n                        <Typography className={classes.user}>last updated: {date}</Typography>\n                        <Typography variant=\"h6\">{shoe.cat_name}</Typography>\n                      </CardActions>\n                    </CardActionArea>\n                  </Card>\n                }  {/* END TERNARY */}\n              </Grid>\n            )//end return\n          })} {/* END MAP */}\n        </Grid>\n      </Box>\n    )//end return\n  }//end render\n};//end class\n\n//put props on redux\nconst putPropsOnState = reduxState => ({ reduxState, user: reduxState.user, account: reduxState.accountsReducer });\n//connect redux with component and withStyles\nexport default connect(putPropsOnState)(withStyles(styles)(UserPage));\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\n//import pages\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\nimport HomePage from '../HomePage/HomePage';\nimport BuyPage from '../BuyPage/BuyPage';\nimport SellPage from '../SellPage/SellPage';\nimport TradePage from '../TradePage/TradePage';\nimport CreatePost from '../CreatePost/CreatePost';\nimport BuySelectShoe from '../BuyPage/BuySelectShoe';\nimport SellSelectShoe from '../SellPage/SellSelectShoe';\nimport HomeSelectShoe from '../HomePage/HomeSelectShoe';\nimport AllShoes from '../AllShoes/AllShoes';\nimport TradeSelectShoe from '../TradePage/TradeSelectShoe';\nimport AllSelectShoe from '../AllShoes/AllSelectShoe';\nimport UserEditShoe from '../UserPage/UserEditShoe';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\nimport AboutPage from '../AboutPage/AboutPage';\nimport UserPage from '../UserPage/UserPage';\n// import ShoeBox from '../ShoeBox/ShoeBox';\n\n//need this for body margin, previously made\nimport './App.css';\n//import MUI\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => {\n  return ({\n    app: {\n      minHeight: '100%',\n    }\n  })\n};//end styles\n\n\n\nclass App extends Component {\n  componentDidMount() {\n    //sends dispatch to get user data\n    this.props.dispatch({ type: 'FETCH_USER' })\n  }\n\n  render() {\n    //allows us to use withStyles on props through classes\n    const { classes } = this.props;\n    return (\n      <Router>\n        <div className={classes.app}>\n          <Route path=\"/\" component={Nav} />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n            {/* display rest of pages without being protected. */}\n            {/* HOME SHOES */}\n            <Route exact path=\"/home\" component={HomePage} />\n            <Route exact path=\"/home/details/:id\" component={HomeSelectShoe} />\n            {/* ALL SHOES */}\n            <Route exact path=\"/allShoes\" component={AllShoes} />\n            <Route exact path=\"/allShoes/details/:id\" component={AllSelectShoe} />\n            {/* BUY SHOES */}\n            <Route exact path=\"/buy\" component={BuyPage} />\n            <Route exact path=\"/buy/details/:id\" component={BuySelectShoe} />\n            {/* SELL SHOES */}\n            <Route exact path=\"/sell\" component={SellPage} />\n            <Route exact path=\"/sell/details/:id\" component={SellSelectShoe} />\n            {/* TRADE SHOES */}\n            <Route exact path=\"/trade\" component={TradePage} />\n            <Route exact path=\"/trade/details/:id\" component={TradeSelectShoe} />\n            {/* Create POST */}\n            <ProtectedRoute exact path=\"/create\" component={CreatePost} />\n            {/* Visiting localhost:3000/about will show the about page.\n            This is a route anyone can see, no login necessary */}\n            <Route exact path=\"/about\" component={AboutPage} />\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n            <ProtectedRoute exact path=\"/account\" component={UserPage} />\n            <ProtectedRoute exact path=\"/account/edit/:id\" component={UserEditShoe} />\n            {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see the info page instead. */}\n            {/* <Route exact path=\"/shoeBox\" component={ShoeBox} /> */}\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    )//end return\n  };//end render\n};//end class\n\n//connect withStyles with our component and redux\nexport default connect()(withStyles(styles)(App));\n","import {createMuiTheme} from '@material-ui/core/styles';\nimport { red, blue } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: red,\n        secondary: blue\n    },\n    status: {\n        danger: 'orange',\n    },\n});//end theme\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\n//import MUI\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport theme from './theme';\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n    <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}